@{
    ViewData["Title"] = "List Of Products";
}
<link href="~/css/index.css" rel="stylesheet" />


<div class="mb-4">
	<div class="date-filter-container">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#productModal">
			<i class="bi bi-plus-lg"></i> Add Product
		</button>
		<div class="date-filter">
			<label for="fromDate">From:</label>
			<input type="date" id="fromDate" placeholder="Select start date">
		</div>

		<div class="date-filter ms-4">
			<label for="toDate">To:</label>
			<input type="date" id="toDate" placeholder="Select end date">
		</div>
     
	</div>

</div>

<table id="productTable" class="display mt-4 nowrap" style="width:100%">
    <thead>
        <tr>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Date</th>
            <th>Unit</th>
            <th>Total Price</th>
            <th>Action</th>
        </tr>
    </thead>
</table>

<!-- Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="productForm">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" id="productName" name="Name" class="form-control" maxlength="50" required>
                    </div>

                    <div class="mb-3">
                        <label for="productUnit" class="form-label">Unit</label>
                        <input type="text" id="productUnit" name="Unit" class="form-control" maxlength="50" required>
                    </div>

                    <div class="mb-3">
                        <label for="productPrice" class="form-label">Price</label>
                        <input type="number" id="productPrice" name="Price" class="form-control" step="0.01" required>
                    </div>

                    <div class="mb-3">
                        <label for="productQuantity" class="form-label">Quantity</label>
                        <input type="number" id="productQuantity" name="Quantity" class="form-control" required>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <input type="submit" class="btn btn-success" value="Save" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Update Quantity & Date Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Quantity & Date</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateForm">
                    <input type="hidden" id="productId" name="Id">

                    <div class="mb-3">
                        <label for="newQuantity" class="form-label">Quantity:</label>
                        <input type="number" id="newQuantity" name="Quantity" class="form-control" required>
                    </div>

                    <div class="mb-3">
                        <label for="newDate" class="form-label">Date:</label>
                        <input type="date" id="newDate" name="Date" class="form-control" required>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    </div>

<script>
     var productTable;
     $(document).ready(function () {
       $(document).on('click', '[data-bs-toggle="modalUpdate"]', function () {
        const productId = $(this).data('update');
        $('#productId').val(productId);
        $("#updateModal").modal("show");
    });
        
        productTable = $("#productTable").DataTable({
            "pageLength": 10,
            "responsive": true,
            "ordering": true,
            "lengthMenu": [10, 20, 25, 50, 100],
            "serverSide": true,
            "processing": true,
            "searching": true,
            "ajax": {
                "url": "/Product/GetList",
                "type": "GET",
                "data": function (model) {
                    var length = model.length || 10;
                    model.pageNumber = model.start ? Math.floor(model.start / length) + 1 : 1;
                    model.pageSize = length;
                    model.searchValue = model.search.value;
                    model.sortColumn = model.columns[model.order[0].column].data;
                    model.sortDirection = model.order[0].dir;
                    model.from=$("#fromDate").val();
                    model.to=$("#toDate").val();
                },
                "dataSrc": "data"
            },
            "columns": [
                { "data": "name", "title": "Product Name", "defaultContent": "" },
                { "data": "quantity", "title": "Quantity", "defaultContent": "" },
                {
                    "data": "date",
                    "title": "Date",
                    "defaultContent": "",
                    "render": function (data) {
                        if (!data) return "";
                        const date = new Date(data);
                        const year = date.getFullYear();
                        const month = String(date.getMonth() + 1).padStart(2, '0');
                        const day = String(date.getDate()).padStart(2, '0');
                        return `${year}-${month}-${day}`;
                    }
                },
                { "data": "unit", "title": "Unit", "defaultContent": "" },
                { "data": "totalPrice", "title": "Total Price", "defaultContent": "" },
                {
                    "data": null,
                    "orderable": false,
                    "render": function (data, type, row) {
                        
                           var tag = `
                            <button class="btn btn-primary" data-bs-toggle="modalUpdate" data-update=${row.id} data-bs-target="#updateModal">
                                <i class="bi bi-pencil-square"></i>
                            </button>`;
                        tag += `
                            <button class="btn btn-danger" style="margin-left: 20px;" onclick="Delete('${row.id}')">
                                <i class="bi bi-trash"></i>
                            </button>`;
                        return tag;

                    }
                }
            ]
        });

        $("#productForm").on("submit", function (e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            $.ajax({
                url: '/Product/Create',
                type: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    if (response) {
                        $("#productName").val("");
                        $("#productUnit").val("");
                        $("#productPrice").val("");
                        $("#productQuantity").val("");
                        Swal.fire('Success', 'Product added successfully!', 'success').then(() => {
                            $('#productModal').modal('hide');
                            productTable.ajax.reload(null, false); 
                        });
                    }
                },
                error: function () {
                    Swal.fire('Error', 'Failed to add product.', 'error');
                }
            });
        });

        $("#updateForm").on("submit", function (e) {
            e.preventDefault();
            const formData = new FormData(this);

            $.ajax({
                url: '/Product/Update',
                type: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    if (response) {
                        $("#newQuantity").val("");
                        $("#newDate").val("");
                        Swal.fire('Success', 'Product updated successfully!', 'success').then(() => {
                            $('#updateModal').modal('hide');
                            productTable.ajax.reload(null, false); 
                        });
                    }
                },
                error: function () {
                    Swal.fire('Error', 'Failed to update product.', 'error');
                }
            });
        });
       
        $("#toDate , #fromDate").on("change",function(){
             productTable.ajax.reload(null, false);
        })
    });
    function Delete(id){
                Swal.fire({
                  title: "Are you sure?",
                  icon: "warning",
                  showCancelButton: true,
                  confirmButtonText: "Yes",
                  cancelButtonText: "cancel"
                }).then((result) => {
                  if (result.isConfirmed) {
                        $.ajax({
                             url:`/Product/Delete?Id=${id}`,
                             type:"GET",
                             async:true,
                             success: function (response) {
                                 console.log(response)
                                 if(response){
                                   productTable.ajax.reload(null, false);
                                 }else{
                                        Swal.fire({
                                             title: "Failed to delete!",
                                             text: "Something went wrong. Please try again.",
                                             icon: "error",
                                             timer: 3000, 
                                             showConfirmButton: false
                                          });

                                 }
                             },
                             error:function(){
                                 Swal.fire({
                                             title: "Failed to delete!",
                                             text: "Something went wrong. Please try again.",
                                             icon: "error",
                                             timer: 3000, 
                                             showConfirmButton: false
                                          });
                             }

                        })
                  } else if (result.dismiss === Swal.DismissReason.cancel) {
                    // If "Cancel" is clicked
                    console.log("Action canceled!");
                  }
    });

        }

</script>